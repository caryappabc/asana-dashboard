[{"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\index.js":"1","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\reportWebVitals.js":"2","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\App.js":"3","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\SummaryofIMS.jsx":"4","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\TotalRequest.jsx":"5","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\HrsPerRegion.jsx":"6","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\DelaybyMonth.jsx":"7","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\DelaybyRegion.jsx":"8","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\DelaybyReason.jsx":"9","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\ItterationperMonth.jsx":"10","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\Drawerlayout.jsx":"11","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\ProjectDetails.jsx":"12","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\OpenProjects.jsx":"13","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\ProjectType.jsx":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":4594,"mtime":1613451459117,"results":"18","hashOfConfig":"16"},{"size":1915,"mtime":1613406293620,"results":"19","hashOfConfig":"16"},{"size":1600,"mtime":1613451796581,"results":"20","hashOfConfig":"16"},{"size":2480,"mtime":1613406331893,"results":"21","hashOfConfig":"16"},{"size":3615,"mtime":1613406252642,"results":"22","hashOfConfig":"16"},{"size":3579,"mtime":1613406246910,"results":"23","hashOfConfig":"16"},{"size":3716,"mtime":1613406223265,"results":"24","hashOfConfig":"16"},{"size":3354,"mtime":1613451777116,"results":"25","hashOfConfig":"16"},{"size":16116,"mtime":1613451425654,"results":"26","hashOfConfig":"16"},{"size":5894,"mtime":1613452151435,"results":"27","hashOfConfig":"16"},{"size":3291,"mtime":1613529499877,"results":"28","hashOfConfig":"16"},{"size":2288,"mtime":1613236944296,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ne4c1y",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\index.js",[],["62","63"],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\reportWebVitals.js",[],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\App.js",["64","65"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport asana from \"asana\";\nimport Drawerlayout from \"./components/Drawerlayout\";\nimport {\n\tTypography,\n\tCircularProgress,\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tMenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nconst token = process.env.REACT_APP_ACCESS_TOKEN;\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(2),\n\t\ttextAlign: \"center\",\n\t\tcolor: \"#FFF\",\n\t},\n\theader: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\talignItem: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tcolor: \"#FFF\",\n\t},\n\ttop: {\n\t\tbackgroundColor: \"#000000\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\talignItem: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tpaddingTop: \"40px\",\n\t},\n\tyear: {\n\t\tmarginLeft: \"20px\",\n\t},\n\tselect: {\n\t\tcolor: \"white\",\n\t\t\"&:before\": {\n\t\t\tborderColor: \"white\",\n\t\t},\n\t\t\"&:after\": {\n\t\t\tborderColor: \"white\",\n\t\t},\n\t},\n\ticon: {\n\t\tfill: \"white\",\n\t},\n}));\n\nconst App = () => {\n\tconst [taskDetails, setTaskDetails] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [didMount, setDidMount] = useState(false);\n\tconst [yearsList, setYearsList] = useState([]);\n\tconst [year, setYear] = useState();\n\n\tconst client = asana.Client.create().useAccessToken(token);\n\n\tlet projectids = process.env.REACT_APP_PROJECTIDS.split(\",\");\n\tconst classes = useStyles();\n\n\tuseEffect(() => {\n\t\tvar currentYear = new Date().getFullYear();\n\t\tvar years = [];\n\t\tvar startYear = 2020;\n\t\tfor (var i = startYear; i <= currentYear; i++) {\n\t\t\tyears.push(startYear++);\n\t\t}\n\t\tsetYearsList(years);\n\t\tsetYear(currentYear);\n\t}, []);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tsetDidMount(true);\n\t\t\tlet tasks = projectids.map((project) =>\n\t\t\t\tclient.tasks\n\t\t\t\t\t.getTasksForProject(project, { limit: 100, opt_pretty: true })\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\treturn result.data.map((r) => r.gid);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t// handle error\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t})\n\t\t\t);\n\t\t\tlet taskdetails = await Promise.all(tasks).then((result) =>\n\t\t\t\tresult.map((projects) =>\n\t\t\t\t\tprojects.map((taskid) =>\n\t\t\t\t\t\tclient.tasks\n\t\t\t\t\t\t\t.getTask(taskid, { opt_pretty: true })\n\t\t\t\t\t\t\t.then((taskdetails) => {\n\t\t\t\t\t\t\t\treturn taskdetails;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t// handle error\n\t\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t\tlet vals = taskdetails.map(async (tp) => {\n\t\t\t\tlet val = await Promise.all(tp).then((tpr) => {\n\t\t\t\t\tlet dt = tpr.map((tk) => {\n\t\t\t\t\t\tlet section = tk.memberships.map((mr) => {\n\t\t\t\t\t\t\tif (projectids.includes(mr.project.gid)) {\n\t\t\t\t\t\t\t\tif (typeof mr.section !== undefined) {\n\t\t\t\t\t\t\t\t\treturn mr.section.name;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet details = {\n\t\t\t\t\t\t\tgid: tk.gid,\n\t\t\t\t\t\t\tname: tk.name,\n\t\t\t\t\t\t\tassignee: tk.assignee,\n\t\t\t\t\t\t\tcompleted_on: tk.completed_at,\n\t\t\t\t\t\t\tcustomfield: tk.custom_fields,\n\t\t\t\t\t\t\tcompleted: tk.completed,\n\t\t\t\t\t\t\tsection: section,\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn details;\n\t\t\t\t\t});\n\t\t\t\t\treturn dt;\n\t\t\t\t});\n\t\t\t\treturn val;\n\t\t\t});\n\t\t\tawait Promise.all(vals).then((data) => {\n\t\t\t\tsetTaskDetails(data);\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\treturn () => setDidMount(false);\n\t\t})();\n\t}, []);\n\tif (!didMount) {\n\t\treturn null;\n\t}\n\n\tconst handleChange = (event) => {\n\t\tsetYear(event.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{loading === false ? (\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<Grid className={classes.top} container spacing={3}>\n\t\t\t\t\t\t<Grid item xs={12} className={classes.header}>\n\t\t\t\t\t\t\t<Typography variant=\"h3\">IMS Dashboard - Asana</Typography>\n\t\t\t\t\t\t\t<FormControl className={classes.year}>\n\t\t\t\t\t\t\t\t<InputLabel\n\t\t\t\t\t\t\t\t\tid=\"demo-mutiple-name-label-year\"\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"white\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tYear\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tlabelId=\"demo-mutiple-name-label-year\"\n\t\t\t\t\t\t\t\t\tid=\"demo-mutiple-name-year\"\n\t\t\t\t\t\t\t\t\tclassName={classes.select}\n\t\t\t\t\t\t\t\t\tinputProps={{ classes: { icon: classes.icon } }}\n\t\t\t\t\t\t\t\t\tvalue={year}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{yearsList.map((y) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={y} value={y}>\n\t\t\t\t\t\t\t\t\t\t\t{y}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Drawerlayout details={taskDetails} year={year} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"Loading\">\n\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\tsize=\"10rem\"\n\t\t\t\t\t\tthickness={1.0}\n\t\t\t\t\t\tvariant=\"indeterminate\"\n\t\t\t\t\t/>\n\t\t\t\t\t<h4>Loading......</h4>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\SummaryofIMS.jsx",[],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\TotalRequest.jsx",[],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\HrsPerRegion.jsx",["66"],"import React from \"react\";\r\nimport {\r\n\tBarChart,\r\n\tBar,\r\n\tXAxis,\r\n\tYAxis,\r\n\tLabelList,\r\n\tCartesianGrid,\r\n\tTooltip,\r\n\tLegend,\r\n} from \"recharts\";\r\n\r\nconst HrsPerRegion = ({ data, month, type, po, assignee }) => {\r\n\tdata = data\r\n\t\t.filter((d) => {\r\n\t\t\treturn d.Project_status !== \"On Hold\";\r\n\t\t})\r\n\t\t.filter((d) => d.Project_status !== \"Cancelled\");\r\n\r\n\tif (month.length !== 0) {\r\n\t\tdata = data.filter((d) => {\r\n\t\t\treturn month.includes(d.Handshake_Month);\r\n\t\t});\r\n\t}\r\n\r\n\tif (type.length !== 0) {\r\n\t\tdata = data.filter((d) => {\r\n\t\t\treturn type.includes(d.Request_Type);\r\n\t\t});\r\n\t}\r\n\r\n\tif (po.length !== 0) {\r\n\t\tdata = data.filter((d) => {\r\n\t\t\treturn po.includes(d.po);\r\n\t\t});\r\n\t}\r\n\r\n\tif (assignee.length !== 0) {\r\n\t\tdata = data.filter((d) => {\r\n\t\t\treturn assignee.includes(d.assignee);\r\n\t\t});\r\n\t}\r\n\r\n\tlet databyregion = data.reduce((r, a) => {\r\n\t\tr[a.Region] = [...(r[a.Region] || []), a];\r\n\t\treturn r;\r\n\t}, {});\r\n\r\n\tlet plotdata = [];\r\n\r\n\tfor (const reg in databyregion) {\r\n\t\tconst sum = databyregion[reg]\r\n\t\t\t.map((task) => task.Set_Hours)\r\n\t\t\t.reduce((prev, curr) => prev + curr, 0);\r\n\t\tlet remaining = databyregion[reg].map((task) => {\r\n\t\t\tif (reg === \"NAM\") {\r\n\t\t\t\treturn 678.2 * 12 - sum;\r\n\t\t\t} else if (reg === \"LAM\") {\r\n\t\t\t\treturn 418.5 * 12 - sum;\r\n\t\t\t} else if (reg === \"Europe\") {\r\n\t\t\t\treturn 781.1 * 12 - sum;\r\n\t\t\t} else if (reg === \"CEN\") {\r\n\t\t\t\treturn 732.1 * 12 - sum;\r\n\t\t\t} else if (reg === \"WCA\") {\r\n\t\t\t\treturn 438.1 * 12 - sum;\r\n\t\t\t} else if (reg === \"APA\") {\r\n\t\t\t\treturn 767.3 * 12 - sum;\r\n\t\t\t} else if (reg === \"Africa\") {\r\n\t\t\t\treturn 438.1 * 12 - sum;\r\n\t\t\t} else if (reg === \"none\") {\r\n\t\t\t\treturn 426 * 12 - sum;\r\n\t\t\t}\r\n\t\t});\r\n\t\tremaining = parseFloat(remaining).toFixed(1);\r\n\t\tplotdata.push({\r\n\t\t\tregion: reg,\r\n\t\t\thours: sum,\r\n\t\t\tremaining: Number(remaining),\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<BarChart\r\n\t\t\twidth={930}\r\n\t\t\theight={350}\r\n\t\t\tdata={plotdata}\r\n\t\t\tstackOffset=\"sign\"\r\n\t\t\tmaxBarSize={80}\r\n\t\t\tmargin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n\t\t>\r\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t<XAxis dataKey=\"region\" />\r\n\t\t\t<YAxis />\r\n\t\t\t<Tooltip />\r\n\t\t\t<Legend />\r\n\t\t\t<Bar dataKey=\"hours\" stackId=\"a\" name=\"Consumed Hours\" fill=\"#111244\">\r\n\t\t\t\t<LabelList dataKey=\"hours\" position=\"inside\" fill=\"#FFFFFF\" />\r\n\t\t\t</Bar>\r\n\t\t\t<Bar\r\n\t\t\t\tdataKey=\"remaining\"\r\n\t\t\t\tstackId=\"a\"\r\n\t\t\t\tname=\"Remaining Hours\"\r\n\t\t\t\tfill=\"#00B6BB\"\r\n\t\t\t>\r\n\t\t\t\t<LabelList dataKey=\"remaining\" position=\"outside\" />\r\n\t\t\t</Bar>\r\n\t\t</BarChart>\r\n\t);\r\n};\r\n\r\nexport default HrsPerRegion;\r\n","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\DelaybyMonth.jsx",[],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\DelaybyRegion.jsx",[],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\DelaybyReason.jsx",[],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\ItterationperMonth.jsx",[],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\Drawerlayout.jsx",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport HrsPerRegion from \"./HrsPerRegion\";\r\nimport SummaryofIMS from \"./SummaryofIMS\";\r\nimport TotalRequest from \"./TotalRequest\";\r\nimport DelaybyMonth from \"./DelaybyMonth\";\r\nimport DelaybyRegion from \"./DelaybyRegion\";\r\nimport DelaybyReason from \"./DelaybyReason\";\r\nimport ProjectDetails from \"./ProjectDetails\";\r\nimport OpenProjects from \"./OpenProjects\";\r\nimport ProjectType from \"./ProjectType\";\r\nimport ItterationperMonth from \"./ItterationperMonth\";\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst AntTabs = withStyles({\r\n\troot: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexFlow: \"row wrap\",\r\n\t},\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles((theme) => ({\r\n\troot: {\r\n\t\tcolor: \"#FFF\",\r\n\t\tflex: 1,\r\n\t\ttextTransform: \"none\",\r\n\t\tminWidth: 72,\r\n\t\tfontWeight: 400,\r\n\t\tfontSize: 16,\r\n\t\tmarginRight: theme.spacing(3),\r\n\t\tmarginLeft: theme.spacing(3),\r\n\t\tfontFamily: [\r\n\t\t\t\"-apple-system\",\r\n\t\t\t\"BlinkMacSystemFont\",\r\n\t\t\t'\"Segoe UI\"',\r\n\t\t\t\"Roboto\",\r\n\t\t\t'\"Helvetica Neue\"',\r\n\t\t\t\"Arial\",\r\n\t\t\t\"sans-serif\",\r\n\t\t\t'\"Apple Color Emoji\"',\r\n\t\t\t'\"Segoe UI Emoji\"',\r\n\t\t\t'\"Segoe UI Symbol\"',\r\n\t\t].join(\",\"),\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: \"#40a9ff\",\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t\t\"&$selected\": {\r\n\t\t\tfontWeight: 900,\r\n\t\t},\r\n\t},\r\n\tselected: {},\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nfunction TabPanel(props) {\r\n\tconst { children, value, index, ...other } = props;\r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"tabpanel\"\r\n\t\t\thidden={value !== index}\r\n\t\t\tid={`simple-tabpanel-${index}`}\r\n\t\t\taria-labelledby={`simple-tab-${index}`}\r\n\t\t\t{...other}\r\n\t\t>\r\n\t\t\t{value === index && (\r\n\t\t\t\t<Box component=\"span\" m={1}>\r\n\t\t\t\t\t<Typography component={\"span\"} variant={\"body2\"}>\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nTabPanel.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tindex: PropTypes.any.isRequired,\r\n\tvalue: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n\treturn {\r\n\t\tid: `simple-tab-${index}`,\r\n\t\t\"aria-controls\": `simple-tabpanel-${index}`,\r\n\t};\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\tcolor: \"#FFF\",\r\n\t},\r\n\tpadding: {\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120,\r\n\t\tmaxWidth: 300,\r\n\t},\r\n\tselect: {\r\n\t\tcolor: \"white\",\r\n\t\t\"&:before\": {\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t\t\"&:after\": {\r\n\t\t\tborderColor: \"white\",\r\n\t\t},\r\n\t},\r\n\ticon: {\r\n\t\tfill: \"white\",\r\n\t},\r\n}));\r\n\r\nconst Drawerlayout = ({ details, year }) => {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = useState(0);\r\n\tconst [reg, setRegion] = useState([]);\r\n\tconst [month, setMonth] = useState([]);\r\n\tconst [reqtype, setReqType] = useState([]);\r\n\tconst [po, setPO] = useState([]);\r\n\tconst [assignee, setAssignee] = useState([]);\r\n\tconst [art, setArt] = useState([]);\r\n\tconst [copy, setCopy] = useState([]);\r\n\r\n\tlet Mname = [\r\n\t\t\"January\",\r\n\t\t\"February\",\r\n\t\t\"March\",\r\n\t\t\"April\",\r\n\t\t\"May\",\r\n\t\t\"June\",\r\n\t\t\"July\",\r\n\t\t\"August\",\r\n\t\t\"September\",\r\n\t\t\"October\",\r\n\t\t\"November\",\r\n\t\t\"December\",\r\n\t];\r\n\r\n\tlet dataset = [];\r\n\tdetails.map((gr) => {\r\n\t\tgr.map((it) => {\r\n\t\t\tlet po = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Project Owner\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet art1 = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Art 1\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet art2 = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Art 2\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet copy = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Copywriter\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet region = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Region\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet Hmonth = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Handshake sent date\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet sethours = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Set Hours\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet requesttype = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Type of Request\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet projectStatus = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Project Status\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet delayReasone = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Reason for delay\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet Citteration = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Current Iteration No.\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet getart = (art1, atr2) => {\r\n\t\t\t\tlet artT = [];\r\n\t\t\t\tlet ar1 =\r\n\t\t\t\t\ttypeof art1 === \"undefined\" || po === null\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: art1.enum_value != null\r\n\t\t\t\t\t\t? art1.enum_value.name\r\n\t\t\t\t\t\t: \"none\";\r\n\t\t\t\tlet ar2 =\r\n\t\t\t\t\ttypeof art1 === \"undefined\" || po === null\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: art2.enum_value != null\r\n\t\t\t\t\t\t? art2.enum_value.name\r\n\t\t\t\t\t\t: \"none\";\r\n\t\t\t\tif (ar1 === \"none\" && art2 === \"none\") {\r\n\t\t\t\t\tartT.push(\"none\");\r\n\t\t\t\t} else if (ar1 === \"none\") {\r\n\t\t\t\t\tartT.push(ar2);\r\n\t\t\t\t} else if (ar2 === \"none\") {\r\n\t\t\t\t\tartT.push(ar1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tartT.push(ar1, ar2);\r\n\t\t\t\t}\r\n\t\t\t\treturn artT;\r\n\t\t\t};\r\n\t\t\tlet data = {\r\n\t\t\t\tName: it.name,\r\n\t\t\t\tid: it.gid,\r\n\t\t\t\t\"open/closed\": it.completed ? \"closed\" : \"open\",\r\n\t\t\t\tsection: it.section.filter(function (element) {\r\n\t\t\t\t\treturn element !== undefined;\r\n\t\t\t\t}),\r\n\t\t\t\tassignee:\r\n\t\t\t\t\ttypeof it.assignee === \"undefined\" || it.assignee === null\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: it.assignee != null\r\n\t\t\t\t\t\t? it.assignee.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tpo:\r\n\t\t\t\t\ttypeof po === \"undefined\" || po === null\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: po.enum_value != null\r\n\t\t\t\t\t\t? po.enum_value.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tart: getart(art1, art2),\r\n\t\t\t\tcopy:\r\n\t\t\t\t\ttypeof copy === \"undefined\" || copy === null\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: copy.enum_value != null\r\n\t\t\t\t\t\t? copy.enum_value.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tRequest_Type:\r\n\t\t\t\t\ttypeof requesttype === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: requesttype.enum_value != null\r\n\t\t\t\t\t\t? requesttype.enum_value.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tRegion:\r\n\t\t\t\t\ttypeof region === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: region.enum_value != null\r\n\t\t\t\t\t\t? region.enum_value.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tHandshake_Month:\r\n\t\t\t\t\ttypeof Hmonth === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: Hmonth.text_value != null\r\n\t\t\t\t\t\t? new Date(Hmonth.text_value).toLocaleString(\"default\", {\r\n\t\t\t\t\t\t\t\tmonth: \"long\",\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tYear:\r\n\t\t\t\t\ttypeof Hmonth === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: Hmonth.text_value != null\r\n\t\t\t\t\t\t? new Date(Hmonth.text_value).getFullYear()\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tSet_Hours:\r\n\t\t\t\t\ttypeof sethours === \"undefined\" || sethours === null\r\n\t\t\t\t\t\t? 0\r\n\t\t\t\t\t\t: sethours.number_value,\r\n\t\t\t\tProject_status:\r\n\t\t\t\t\ttypeof projectStatus === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: projectStatus.enum_value != null\r\n\t\t\t\t\t\t? projectStatus.enum_value.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tReason_for_delay:\r\n\t\t\t\t\ttypeof delayReasone === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: delayReasone.enum_value != null\r\n\t\t\t\t\t\t? delayReasone.enum_value.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tCurrent_ittr:\r\n\t\t\t\t\ttypeof Citteration === \"undefined\"\r\n\t\t\t\t\t\t? 0\r\n\t\t\t\t\t\t: Citteration.enum_value != null\r\n\t\t\t\t\t\t? Citteration.enum_value.name\r\n\t\t\t\t\t\t: 0,\r\n\t\t\t};\r\n\t\t\tdataset.push(data);\r\n\t\t});\r\n\t});\r\n\r\n\tlet fd = dataset.filter((d) => {\r\n\t\treturn d.Year === year;\r\n\t});\r\n\r\n\tfd.sort(function (a, b) {\r\n\t\treturn Mname.indexOf(a.Handshake_Month) - Mname.indexOf(b.Handshake_Month);\r\n\t});\r\n\tconst regionname = [...new Set(fd.map((item) => item.Region))];\r\n\tconst monthname = [...new Set(fd.map((item) => item.Handshake_Month))];\r\n\tconst resttypelist = [...new Set(fd.map((item) => item.Request_Type))];\r\n\tconst POs = [...new Set(fd.map((item) => item.po))];\r\n\tconst artTeam = [\r\n\t\t...new Set(\r\n\t\t\tArray.prototype.concat.apply([], [...new Set(fd.map((item) => item.art))])\r\n\t\t),\r\n\t];\r\n\tconst copyTeam = [...new Set(fd.map((item) => item.copy))];\r\n\tconst handleChange = (event, newValue) => {\r\n\t\tsetValue(newValue);\r\n\t};\r\n\r\n\tconst handleRegionChange = (event) => {\r\n\t\tsetRegion(event.target.value);\r\n\t};\r\n\tconst handleMonthChange = (event) => {\r\n\t\tsetMonth(event.target.value);\r\n\t};\r\n\tconst handleRequestChange = (event) => {\r\n\t\tsetReqType(event.target.value);\r\n\t};\r\n\r\n\tconst handlePOChange = (event) => {\r\n\t\tsetPO(event.target.value);\r\n\t};\r\n\tconst handleArtChange = (event) => {\r\n\t\tsetArt(event.target.value);\r\n\t};\r\n\tconst handleCopyChange = (event) => {\r\n\t\tsetCopy(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t<InputLabel id=\"demo-mutiple-name-label\" style={{ color: \"white\" }}>\r\n\t\t\t\t\tRegion\r\n\t\t\t\t</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"demo-mutiple-name-label\"\r\n\t\t\t\t\tid=\"demo-mutiple-name\"\r\n\t\t\t\t\tmultiple\r\n\t\t\t\t\tclassName={classes.select}\r\n\t\t\t\t\tinputProps={{ classes: { icon: classes.icon } }}\r\n\t\t\t\t\tdisabled={[4, 5, 6].includes(value) ? true : false}\r\n\t\t\t\t\tvalue={reg}\r\n\t\t\t\t\tonChange={handleRegionChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t{regionname.map((name) => (\r\n\t\t\t\t\t\t<MenuItem key={name} value={name}>\r\n\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t<InputLabel id=\"demo-mutiple-name-label1\" style={{ color: \"white\" }}>\r\n\t\t\t\t\tMonth\r\n\t\t\t\t</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"demo-mutiple-name-label1\"\r\n\t\t\t\t\tid=\"demo-mutiple-name\"\r\n\t\t\t\t\tmultiple\r\n\t\t\t\t\tclassName={classes.select}\r\n\t\t\t\t\tinputProps={{ classes: { icon: classes.icon } }}\r\n\t\t\t\t\tdisabled={[1, 3, 4].includes(value) ? true : false}\r\n\t\t\t\t\tvalue={month}\r\n\t\t\t\t\tonChange={handleMonthChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t{monthname.map((name) => (\r\n\t\t\t\t\t\t<MenuItem key={name} value={name}>\r\n\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t<InputLabel id=\"demo-mutiple-name-label2\" style={{ color: \"white\" }}>\r\n\t\t\t\t\tRequest Type\r\n\t\t\t\t</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"demo-mutiple-name-label2\"\r\n\t\t\t\t\tid=\"demo-mutiple-name\"\r\n\t\t\t\t\tmultiple\r\n\t\t\t\t\tclassName={classes.select}\r\n\t\t\t\t\tinputProps={{ classes: { icon: classes.icon } }}\r\n\t\t\t\t\tdisabled={[3, 5, 6].includes(value) ? true : false}\r\n\t\t\t\t\tvalue={reqtype}\r\n\t\t\t\t\tonChange={handleRequestChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t{resttypelist.map((name) => (\r\n\t\t\t\t\t\t<MenuItem key={name} value={name}>\r\n\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t<InputLabel id=\"demo-mutiple-name-label3\" style={{ color: \"white\" }}>\r\n\t\t\t\t\tPO\r\n\t\t\t\t</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"demo-mutiple-name-label3\"\r\n\t\t\t\t\tid=\"demo-mutiple-name\"\r\n\t\t\t\t\tmultiple\r\n\t\t\t\t\tclassName={classes.select}\r\n\t\t\t\t\tinputProps={{ classes: { icon: classes.icon } }}\r\n\t\t\t\t\tdisabled={[3, 5, 6].includes(value) ? true : false}\r\n\t\t\t\t\tvalue={po}\r\n\t\t\t\t\tonChange={handlePOChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t{POs.map((name) => (\r\n\t\t\t\t\t\t<MenuItem key={name} value={name}>\r\n\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t<InputLabel id=\"demo-mutiple-name-label4\" style={{ color: \"white\" }}>\r\n\t\t\t\t\tArt\r\n\t\t\t\t</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"demo-mutiple-name-label4\"\r\n\t\t\t\t\tid=\"demo-mutiple-name\"\r\n\t\t\t\t\tmultiple\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tclassName={classes.select}\r\n\t\t\t\t\tinputProps={{ classes: { icon: classes.icon } }}\r\n\t\t\t\t\tvalue={art}\r\n\t\t\t\t\tonChange={handleArtChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t{artTeam.map((name) => (\r\n\t\t\t\t\t\t<MenuItem key={name} value={name}>\r\n\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t<InputLabel id=\"demo-mutiple-name-label5\" style={{ color: \"white\" }}>\r\n\t\t\t\t\tCopy\r\n\t\t\t\t</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"demo-mutiple-name-label5\"\r\n\t\t\t\t\tid=\"demo-mutiple-name\"\r\n\t\t\t\t\tmultiple\r\n\t\t\t\t\tclassName={classes.select}\r\n\t\t\t\t\tinputProps={{ classes: { icon: classes.icon } }}\r\n\t\t\t\t\tdisabled={[0, 2, 3, 4, 5, 6].includes(value) ? true : false}\r\n\t\t\t\t\tvalue={copy}\r\n\t\t\t\t\tonChange={handleCopyChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t{copyTeam.map((name) => (\r\n\t\t\t\t\t\t<MenuItem key={name} value={name}>\r\n\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\r\n\t\t\t<AntTabs\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tcentered\r\n\t\t\t\taria-label=\"ant example\"\r\n\t\t\t>\r\n\t\t\t\t<AntTab label=\"Remaining Hours Summary\" {...a11yProps(0)} />\r\n\t\t\t\t<AntTab label=\"No of Requests\" {...a11yProps(1)} />\r\n\t\t\t\t<AntTab label=\"Delay Summary\" {...a11yProps(2)} />\r\n\t\t\t\t<AntTab label=\"Iterations\" {...a11yProps(3)} />\r\n\t\t\t\t<AntTab label=\"Open Projects\" {...a11yProps(4)} />\r\n\t\t\t\t<AntTab label=\"Project Type Summary\" {...a11yProps(5)} />\r\n\t\t\t\t<AntTab label=\"Project Details\" {...a11yProps(6)} />\r\n\t\t\t</AntTabs>\r\n\r\n\t\t\t<TabPanel value={value} index={0}>\r\n\t\t\t\t<Card className=\"container\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<SummaryofIMS\r\n\t\t\t\t\t\t\tdata={fd}\r\n\t\t\t\t\t\t\tregion={reg}\r\n\t\t\t\t\t\t\ttype={reqtype}\r\n\t\t\t\t\t\t\tpo={po}\r\n\t\t\t\t\t\t\tassignee={assignee}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\tSet Hours / Remaining Time per Month\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"container\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<HrsPerRegion\r\n\t\t\t\t\t\t\tdata={fd}\r\n\t\t\t\t\t\t\tmonth={month}\r\n\t\t\t\t\t\t\ttype={reqtype}\r\n\t\t\t\t\t\t\tpo={po}\r\n\t\t\t\t\t\t\tassignee={assignee}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\tSet Hours / Remaining Time per Region\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</TabPanel>\r\n\t\t\t<TabPanel value={value} index={1}>\r\n\t\t\t\t<Card className=\"container\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<TotalRequest\r\n\t\t\t\t\t\t\tdata={fd}\r\n\t\t\t\t\t\t\tregion={reg}\r\n\t\t\t\t\t\t\ttype={reqtype}\r\n\t\t\t\t\t\t\tpo={po}\r\n\t\t\t\t\t\t\tcopy={copy}\r\n\t\t\t\t\t\t\tassignee={assignee}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">Total Num Request per Month</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</TabPanel>\r\n\t\t\t<TabPanel value={value} index={2}>\r\n\t\t\t\t<Card className=\"container\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<DelaybyMonth\r\n\t\t\t\t\t\t\tdata={fd}\r\n\t\t\t\t\t\t\tregion={reg}\r\n\t\t\t\t\t\t\ttype={reqtype}\r\n\t\t\t\t\t\t\tpo={po}\r\n\t\t\t\t\t\t\tassignee={assignee}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">Delay per Month</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"container\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<DelaybyRegion\r\n\t\t\t\t\t\t\tdata={fd}\r\n\t\t\t\t\t\t\tmonth={month}\r\n\t\t\t\t\t\t\ttype={reqtype}\r\n\t\t\t\t\t\t\tpo={po}\r\n\t\t\t\t\t\t\tassignee={assignee}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">Delay per Region</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"container\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<DelaybyReason\r\n\t\t\t\t\t\t\tdata={fd}\r\n\t\t\t\t\t\t\tregion={reg}\r\n\t\t\t\t\t\t\tmonth={month}\r\n\t\t\t\t\t\t\ttype={reqtype}\r\n\t\t\t\t\t\t\tpo={po}\r\n\t\t\t\t\t\t\tassignee={assignee}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">Delay per Reason</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</TabPanel>\r\n\t\t\t<TabPanel value={value} index={3}>\r\n\t\t\t\t<Card className=\"container\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<ItterationperMonth data={fd} region={reg} />\r\n\t\t\t\t\t\t<Typography className={classes.padding} variant=\"h5\">\r\n\t\t\t\t\t\t\tNo of Projects with Iteration above 2\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</TabPanel>\r\n\t\t\t<TabPanel value={value} index={4}>\r\n\t\t\t\t<Card className=\"container\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<OpenProjects data={fd} month={month} />\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</TabPanel>\r\n\t\t\t<TabPanel value={value} index={5}>\r\n\t\t\t\t<Card className=\"container\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<ProjectType data={fd} month={month} />\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</TabPanel>\r\n\t\t\t<TabPanel value={value} index={6}>\r\n\t\t\t\t<Card className=\"container\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<ProjectDetails data={fd} po={po} type={reqtype} />\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</TabPanel>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Drawerlayout;\r\n","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\ProjectDetails.jsx",[],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\OpenProjects.jsx",["82"],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\ProjectType.jsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":112,"column":45,"nodeType":"89","messageId":"90","endLine":112,"endColumn":47},{"ruleId":"91","severity":1,"message":"92","line":140,"column":5,"nodeType":"93","endLine":140,"endColumn":7,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"88","line":55,"column":48,"nodeType":"89","messageId":"90","endLine":55,"endColumn":50},{"ruleId":"95","severity":1,"message":"96","line":19,"column":8,"nodeType":"97","messageId":"98","endLine":19,"endColumn":12},{"ruleId":"95","severity":1,"message":"99","line":129,"column":19,"nodeType":"97","messageId":"98","endLine":129,"endColumn":30},{"ruleId":"87","severity":1,"message":"100","line":149,"column":19,"nodeType":"89","messageId":"101","endLine":149,"endColumn":21},{"ruleId":"87","severity":1,"message":"100","line":150,"column":15,"nodeType":"89","messageId":"101","endLine":150,"endColumn":17},{"ruleId":"87","severity":1,"message":"102","line":151,"column":33,"nodeType":"103","messageId":"90","endLine":151,"endColumn":42},{"ruleId":"87","severity":1,"message":"102","line":156,"column":35,"nodeType":"103","messageId":"90","endLine":156,"endColumn":44},{"ruleId":"87","severity":1,"message":"102","line":161,"column":35,"nodeType":"103","messageId":"90","endLine":161,"endColumn":44},{"ruleId":"87","severity":1,"message":"102","line":166,"column":35,"nodeType":"103","messageId":"90","endLine":166,"endColumn":44},{"ruleId":"87","severity":1,"message":"102","line":171,"column":37,"nodeType":"103","messageId":"90","endLine":171,"endColumn":46},{"ruleId":"87","severity":1,"message":"102","line":176,"column":37,"nodeType":"103","messageId":"90","endLine":176,"endColumn":46},{"ruleId":"87","severity":1,"message":"102","line":181,"column":39,"nodeType":"103","messageId":"90","endLine":181,"endColumn":48},{"ruleId":"87","severity":1,"message":"102","line":186,"column":42,"nodeType":"103","messageId":"90","endLine":186,"endColumn":51},{"ruleId":"87","severity":1,"message":"102","line":191,"column":44,"nodeType":"103","messageId":"90","endLine":191,"endColumn":53},{"ruleId":"87","severity":1,"message":"102","line":196,"column":43,"nodeType":"103","messageId":"90","endLine":196,"endColumn":52},{"ruleId":"87","severity":1,"message":"102","line":201,"column":42,"nodeType":"103","messageId":"90","endLine":201,"endColumn":51},{"ruleId":"95","severity":1,"message":"104","line":62,"column":7,"nodeType":"97","messageId":"98","endLine":62,"endColumn":14},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client.tasks' and 'projectids'. Either include them or remove the dependency array.","ArrayExpression",["107"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'setAssignee' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.find() expects a value to be returned at the end of function.","FunctionExpression","'artname' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [client.tasks, projectids]",{"range":"110","text":"111"},[3236,3238],"[client.tasks, projectids]"]