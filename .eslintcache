[{"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\index.js":"1","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\reportWebVitals.js":"2","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\App.js":"3","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\Info.jsx":"4","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\BarGraphHrsPerMonth.jsx":"5","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\SummaryofIMS.jsx":"6","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\TotalRequest.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":2285,"mtime":1611480672773,"results":"11","hashOfConfig":"9"},{"size":6696,"mtime":1611465798110,"results":"12","hashOfConfig":"9"},{"size":961,"mtime":1611464387682,"results":"13","hashOfConfig":"9"},{"size":1042,"mtime":1611464316209,"results":"14","hashOfConfig":"9"},{"size":845,"mtime":1611468114925,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ne4c1y",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\index.js",[],["34","35"],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\reportWebVitals.js",[],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\App.js",["36"],"F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\Info.jsx",["37","38","39","40","41","42","43","44","45","46","47"],"import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport BarGraphHrsPerMonth from \"./BarGraphHrsPerMonth\";\r\nimport SummaryofIMS from \"./SummaryofIMS\";\r\nimport TotalRequest from \"./TotalRequest\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nconst Info = ({ details }) => {\r\n\t/*let frmdt = new Date(details.created_at);\r\n\tlet compdt = new Date(details.completed_at);\r\n\tlet time_taken_mil = compdt.getTime() - frmdt.getTime();\r\n\tlet hours = time_taken_mil / (1000 * 60 * 60);\r\n\tlet absoluteHours = Math.floor(hours);\r\n\tlet h = absoluteHours > 9 ? absoluteHours : \"0\" + absoluteHours;\r\n\tlet totalMinutes = Math.floor(time_taken_mil / (1000 * 60));\r\n\t// Minutes remaining from calculated hours\r\n\tlet minutes = (hours - absoluteHours) * 60;\r\n\tlet absoluteMinutes = Math.floor(minutes);\r\n\tlet m = absoluteMinutes > 9 ? absoluteMinutes : \"0\" + absoluteMinutes;\r\n\t//sec left of of calculated mins\r\n\tvar seconds = (minutes - absoluteMinutes) * 60;\r\n\tvar absoluteSeconds = Math.floor(seconds);\r\n\tvar s = absoluteSeconds > 9 ? absoluteSeconds : \"0\" + absoluteSeconds;\r\n\tvar display = h === 0 ? \"0.\" + totalMinutes : absoluteHours;\r\n\tlet customfields = details.custom_fields;\r\n\tconst renderCustomFieldData = () => {\r\n\t\tif (customfields) {\r\n\t\t\treturn customfields.map((field) => {\r\n\t\t\t\treturn renderCustom(field);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t*/\r\n\tlet dataset = [];\r\n\tdetails.map((gr) => {\r\n\t\tgr.map((it) => {\r\n\t\t\tlet region = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Region\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet Hmonth = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Handshake sent date\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet sethours = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Set Hours\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet requesttype = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Type of Request\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet projectStatus = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Project Status\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet delayReasone = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Reason for delay\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet Citteration = it.customfield.find(function (field, index) {\r\n\t\t\t\tif (field.name === \"Current Iteration No.\") {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet data = {\r\n\t\t\t\tName: it.name,\r\n\t\t\t\tid: it.gid,\r\n\t\t\t\tassignee:\r\n\t\t\t\t\ttypeof it.assignee === \"undefined\" || it.assignee === null\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: it.assignee.name,\r\n\t\t\t\tRequest_Type:\r\n\t\t\t\t\ttypeof requesttype === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: requesttype.enum_value != null\r\n\t\t\t\t\t\t? requesttype.enum_value.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tRegion:\r\n\t\t\t\t\ttypeof region === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: region.enum_value != null\r\n\t\t\t\t\t\t? region.enum_value.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tHandshake_Month:\r\n\t\t\t\t\ttypeof Hmonth === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: Hmonth.text_value != null\r\n\t\t\t\t\t\t? new Date(Hmonth.text_value).toLocaleString(\"default\", {\r\n\t\t\t\t\t\t\t\tmonth: \"long\",\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tSet_Hours:\r\n\t\t\t\t\ttypeof sethours === \"undefined\" || sethours === null\r\n\t\t\t\t\t\t? 0\r\n\t\t\t\t\t\t: sethours.number_value,\r\n\t\t\t\tProject_status:\r\n\t\t\t\t\ttypeof projectStatus === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: projectStatus.enum_value != null\r\n\t\t\t\t\t\t? projectStatus.enum_value.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tReason_for_delay:\r\n\t\t\t\t\ttypeof delayReasone === \"undefined\"\r\n\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t: delayReasone.enum_value != null\r\n\t\t\t\t\t\t? delayReasone.enum_value.name\r\n\t\t\t\t\t\t: \"none\",\r\n\t\t\t\tCurrent_ittr:\r\n\t\t\t\t\ttypeof Citteration === \"undefined\"\r\n\t\t\t\t\t\t? 0\r\n\t\t\t\t\t\t: Citteration.enum_value != null\r\n\t\t\t\t\t\t? Citteration.enum_value.name\r\n\t\t\t\t\t\t: 0,\r\n\t\t\t};\r\n\t\t\tdataset.push(data);\r\n\t\t});\r\n\t});\r\n\tconst renderCustom = (field) => {\r\n\t\tif (field.type === \"enum\") {\r\n\t\t\tif (field.enum_value != null) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t{field.name} : {field.enum_value.name}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else if (field.type === \"number\") {\r\n\t\t\treturn (\r\n\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t{field.name} : {field.number_value}\r\n\t\t\t\t</Typography>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tif (field.name === \"Handshake sent date\") {\r\n\t\t\t\tlet Hdate = new Date(field.text_value);\r\n\t\t\t\tlet Hmonth = Hdate.toLocaleString(\"default\", { month: \"long\" });\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t{field.name} : {field.text_value}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tHandshake Month : {Hmonth}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t{field.name} : {field.text_value}\r\n\t\t\t\t</Typography>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<CardContent>\r\n\t\t\t\t{/*{details.map((gr) =>\r\n\t\t\t\t\tgr.map((it) => (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<p Style=\"color:red;\" key={it.gid}>\r\n\t\t\t\t\t\t\t\t{it.name}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t{it.customfield.map((field) => renderCustom(field))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t\t)} */}\r\n\t\t\t\t<SummaryofIMS data={dataset} />\r\n\t\t\t\t<BarGraphHrsPerMonth data={dataset} />\r\n\t\t\t\t<TotalRequest data={dataset} />\r\n\r\n\t\t\t\t{/*{dataset.map((list) => (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p Style=\"color:red;\" key={list.id}>\r\n\t\t\t\t\t\t\t{list.Name}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p key={list.id}>{list.id}</p>\r\n\t\t\t\t\t\t<p key={list.id}>{list.Handshake_Month}</p>\r\n\t\t\t\t\t\t<p key={list.id}>{list.Region}</p>\r\n\t\t\t\t\t\t<p key={list.id}>{list.Request_Type}</p>\r\n\t\t\t\t\t\t<p key={list.id}>{list.Set_Hours}</p>\r\n\t\t\t\t\t\t<p key={list.id}>{list.assignee}</p>\r\n\t\t\t\t\t\t<p>{list.Project_status}</p>\r\n\t\t\t\t\t\t<p>{list.Reason_for_delay}</p>\r\n\t\t\t\t\t\t<p>{list.Current_ittr}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}/*}\r\n\t\t\t\t{/*<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t{details.completed ? \"Completed\" : \"Not Completed\"}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t{details.created_at}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t{details.completed_at}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\tTime Taken : {display}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t{renderCustomFieldData()}\r\n\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\tModified : {details.modified_at}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\tNotes : {details.notes}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\tLink : <a href={details.permalink_url}>{details.permalink_url}</a>\r\n\t</Typography>*/}\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Info;\r\n","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\BarGraphHrsPerMonth.jsx",["48","49"],"import React from \"react\";\r\nimport {\r\n\tBarChart,\r\n\tBar,\r\n\tBrush,\r\n\tReferenceLine,\r\n\tXAxis,\r\n\tYAxis,\r\n\tCartesianGrid,\r\n\tTooltip,\r\n\tLegend,\r\n} from \"recharts\";\r\n\r\nconst BarGraphHrsPerMonth = ({ data }) => {\r\n\tlet databyregion = data.reduce((r, a) => {\r\n\t\tr[a.Region] = [...(r[a.Region] || []), a];\r\n\t\treturn r;\r\n\t}, {});\r\n\r\n\tlet plotdata = [];\r\n\r\n\tfor (const reg in databyregion) {\r\n\t\tconst sum = databyregion[reg]\r\n\t\t\t.map((task) => task.Set_Hours)\r\n\t\t\t.reduce((prev, curr) => prev + curr, 0);\r\n\t\tconst remaining = 426 * 12 - sum;\r\n\t\tplotdata.push({\r\n\t\t\tregion: reg,\r\n\t\t\thours: sum,\r\n\t\t\tremaining: remaining,\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<BarChart width={930} height={350} data={plotdata}>\r\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t<XAxis dataKey=\"region\" />\r\n\t\t\t<YAxis />\r\n\t\t\t<Tooltip />\r\n\t\t\t<Legend />\r\n\t\t\t<Bar dataKey=\"hours\" fill=\"#2B4F69\" />\r\n\t\t\t<Bar dataKey=\"remaining\" fill=\"#FF995B\" />\r\n\t\t</BarChart>\r\n\t);\r\n};\r\n\r\nexport default BarGraphHrsPerMonth;\r\n","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\SummaryofIMS.jsx",["50","51"],"import React from \"react\";\r\nimport {\r\n\tBarChart,\r\n\tBar,\r\n\tBrush,\r\n\tReferenceLine,\r\n\tLabelList,\r\n\tXAxis,\r\n\tYAxis,\r\n\tCartesianGrid,\r\n\tTooltip,\r\n\tLegend,\r\n} from \"recharts\";\r\n\r\nconst SummaryofIMS = ({ data }) => {\r\n\tlet databymonths = data.reduce((r, a) => {\r\n\t\tr[a.Handshake_Month] = [...(r[a.Handshake_Month] || []), a];\r\n\t\treturn r;\r\n\t}, {});\r\n\r\n\tlet plotdata = [];\r\n\r\n\tfor (const month in databymonths) {\r\n\t\tconst sum = databymonths[month]\r\n\t\t\t.map((task) => task.Set_Hours)\r\n\t\t\t.reduce((prev, curr) => prev + curr, 0);\r\n\t\tconst remaining = 426 * 12 - sum;\r\n\t\tplotdata.push({\r\n\t\t\tmonth: month,\r\n\t\t\thours: sum,\r\n\t\t\tremaining: remaining,\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<BarChart width={930} height={350} data={plotdata}>\r\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t<XAxis dataKey=\"month\" />\r\n\t\t\t<YAxis />\r\n\t\t\t<Tooltip />\r\n\t\t\t<Legend />\r\n\t\t\t<Bar dataKey=\"hours\" fill=\"#2B4F69\">\r\n\t\t\t\t<LabelList dataKey=\"months\" position=\"top\" />\r\n\t\t\t</Bar>\r\n\t\t\t<Bar dataKey=\"remaining\" fill=\"#FF995B\" />\r\n\t\t</BarChart>\r\n\t);\r\n};\r\n\r\nexport default SummaryofIMS;\r\n","F:\\VSCode workspaces\\react_projects\\asana-dashboard\\src\\components\\TotalRequest.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":14,"column":6,"nodeType":"58","messageId":"59","endLine":14,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":35,"column":19,"nodeType":"63","messageId":"64","endLine":35,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":36,"column":15,"nodeType":"63","messageId":"64","endLine":36,"endColumn":17},{"ruleId":"61","severity":1,"message":"65","line":37,"column":37,"nodeType":"66","messageId":"67","endLine":37,"endColumn":46},{"ruleId":"61","severity":1,"message":"65","line":42,"column":37,"nodeType":"66","messageId":"67","endLine":42,"endColumn":46},{"ruleId":"61","severity":1,"message":"65","line":47,"column":39,"nodeType":"66","messageId":"67","endLine":47,"endColumn":48},{"ruleId":"61","severity":1,"message":"65","line":52,"column":42,"nodeType":"66","messageId":"67","endLine":52,"endColumn":51},{"ruleId":"61","severity":1,"message":"65","line":57,"column":44,"nodeType":"66","messageId":"67","endLine":57,"endColumn":53},{"ruleId":"61","severity":1,"message":"65","line":62,"column":43,"nodeType":"66","messageId":"67","endLine":62,"endColumn":52},{"ruleId":"61","severity":1,"message":"65","line":67,"column":42,"nodeType":"66","messageId":"67","endLine":67,"endColumn":51},{"ruleId":"56","severity":1,"message":"68","line":125,"column":8,"nodeType":"58","messageId":"59","endLine":125,"endColumn":20},{"ruleId":"56","severity":1,"message":"69","line":5,"column":2,"nodeType":"58","messageId":"59","endLine":5,"endColumn":7},{"ruleId":"56","severity":1,"message":"70","line":6,"column":2,"nodeType":"58","messageId":"59","endLine":6,"endColumn":15},{"ruleId":"56","severity":1,"message":"69","line":5,"column":2,"nodeType":"58","messageId":"59","endLine":5,"endColumn":7},{"ruleId":"56","severity":1,"message":"70","line":6,"column":2,"nodeType":"58","messageId":"59","endLine":6,"endColumn":15},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'workspace_id' is assigned a value but never used.","Identifier","unusedVar","'render' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.find() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'renderCustom' is assigned a value but never used.","'Brush' is defined but never used.","'ReferenceLine' is defined but never used.","no-global-assign","no-unsafe-negation"]